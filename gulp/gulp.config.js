"use strict";
import { exec } from "child_process";
import colors from "ansi-colors";
import { projectConfig } from "../scripts/config.js";

const date = new Date();
const timestamps = {
  year: date.getFullYear(),
  month: (date.getMonth() < 10 ? "0" : "") + (date.getMonth() + 1),
  date: (date.getDate() < 10 ? "0" : "") + date.getDate(),
  hour: (date.getHours() < 10 ? "0" : "") + date.getHours(),
  min: (date.getMinutes() < 10 ? "0" : "") + date.getMinutes(),
  sec: (date.getSeconds() < 10 ? "0" : "") + date.getSeconds(),
};
const timestamp = `${timestamps.year}-${timestamps.month}-${timestamps.date} ${timestamps.hour}:${timestamps.min}:${timestamps.sec}`;

const slugifyItem = (str) => {
  let outString = str
    .replaceAll(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, "")
    .replaceAll(" ", "");
  return outString;
};

const shell = (cmd, cb, shellOptions = { ignoreErrors: false }) => {
  exec(cmd.join(";"), (err, stdout, stderr) => {
    // Most of the time we'll want to log and exit if we encounter errors
    if (!shellOptions.ignoreErrors && err) {
      cb(new Error(colors.red(stderr)));
      return;
    } else {
      if (stdout) {
        console.log(stdout);
      }
      if (stderr) {
        console.error(colors.red(stderr));
      }
      cb();
    }
  });
};

const config = {
  projectConfig,
  batchDir: "batches", // Directory where batches will be saved
  buildDir: "dist", // The "build" directory generated by Svelte
  publicDir: "public", // The Svelte public directory
  publicImageDir: "images", // Directory where series images will live
  prodUrl: `https://${projectConfig.s3.bucket}/${projectConfig.s3.folder}/index.html`,
  timestamp,
  slugifyItem,
  defaultOptions: {
    string: "port",
    default: {
      port: 3000,
    },
    alias: {
      p: "port",
    },
  },
  colors,
  shell,
};

export default config;
